[{"/Users/jeanflower/outsideICloud/git/FlagClient/src/index.tsx":"1","/Users/jeanflower/outsideICloud/git/FlagClient/src/reportWebVitals.ts":"2","/Users/jeanflower/outsideICloud/git/FlagClient/src/App.tsx":"3","/Users/jeanflower/outsideICloud/git/FlagClient/src/NavBar.tsx":"4","/Users/jeanflower/outsideICloud/git/FlagClient/src/SelectFrom.tsx":"5","/Users/jeanflower/outsideICloud/git/FlagClient/src/random.tsx":"6","/Users/jeanflower/outsideICloud/git/FlagClient/src/displayData.tsx":"7","/Users/jeanflower/outsideICloud/git/FlagClient/src/IdentifyAll.tsx":"8","/Users/jeanflower/outsideICloud/git/FlagClient/src/flagImages.tsx":"9","/Users/jeanflower/outsideICloud/git/FlagClient/src/peppaPigImages.tsx":"10","/Users/jeanflower/outsideICloud/git/FlagClient/src/bSLImages.tsx":"11","/Users/jeanflower/outsideICloud/git/FlagClient/src/indianDessertImages.tsx":"12"},{"size":594,"mtime":1638701881983,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1638701881984,"results":"15","hashOfConfig":"14"},{"size":4376,"mtime":1642240701684,"results":"16","hashOfConfig":"14"},{"size":3128,"mtime":1642240701996,"results":"17","hashOfConfig":"14"},{"size":4250,"mtime":1639841135440,"results":"18","hashOfConfig":"14"},{"size":3338,"mtime":1639762518055,"results":"19","hashOfConfig":"14"},{"size":1426,"mtime":1641041254996,"results":"20","hashOfConfig":"14"},{"size":4725,"mtime":1639841371116,"results":"21","hashOfConfig":"14"},{"size":29836,"mtime":1639767490842,"results":"22","hashOfConfig":"14"},{"size":8515,"mtime":1639898751209,"results":"23","hashOfConfig":"14"},{"size":2641,"mtime":1640884552007,"results":"24","hashOfConfig":"14"},{"size":2355,"mtime":1642240701719,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1fr6lqt",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jeanflower/outsideICloud/git/FlagClient/src/index.tsx",[],["52","53"],"/Users/jeanflower/outsideICloud/git/FlagClient/src/reportWebVitals.ts",[],"/Users/jeanflower/outsideICloud/git/FlagClient/src/App.tsx",[],"/Users/jeanflower/outsideICloud/git/FlagClient/src/NavBar.tsx",[],"/Users/jeanflower/outsideICloud/git/FlagClient/src/SelectFrom.tsx",[],"/Users/jeanflower/outsideICloud/git/FlagClient/src/random.tsx",["54"],"\nexport function generateRandomSelection(\n  images: any[],\n  numFlagsShown: number,\n  lastThree: number[],\n){\n  // console.log(`images = ${JSON.stringify(images)}`);\n  let selectFromThese = Array.from(Array(images.length).keys());\n  // console.log(`selectFromThese before removal = ${\n  //  JSON.stringify(selectFromThese.map((i)=>{\n  //    if(i<0){\n  //      return i;\n  //    } else {\n  //      return images[i].name;\n  //    }\n  //  }))}`);\n  const skipThese:number[] = [...lastThree];\n  skipThese.sort((a,b)=>{return (a<b)?1:-1;});\n  // console.log(`skipThese = ${skipThese} from ${selectFromThese}`);\n  for(let prev of skipThese){\n    if(prev >= 0 && selectFromThese.length > numFlagsShown){\n      // console.log(`remove ${prev} as an option`);\n      // console.log(`selectFromThese was = ${JSON.stringify(selectFromThese)}`);\n      selectFromThese.splice(prev, 1);\n      // console.log(`selectFromThese becomes = ${JSON.stringify(selectFromThese)}`);\n    }\n  }\n  // console.log(`selectFromThese after removal = ${\n  //  JSON.stringify(selectFromThese)}`);\n  // console.log(`selectFromThese after removal = ${\n  //  JSON.stringify(selectFromThese.map((i)=>{\n  //    if(i<0){\n  //      return i;\n  //    } else {\n  //      return images[i].name;\n  //    }\n  //  }))}`);\n  const selectFromCount = selectFromThese.length;\n  const indicesToShow: number[] = [];\n  const randsSelected: number[] = [];\n\n  for(let i = 0; i < numFlagsShown; i = i + 1){\n    let randNum = Math.random();\n    randNum = Math.floor(randNum * (selectFromCount - i));\n    // console.log(`randNum = ${randNum}`);\n    let sorted:number[] = [...randsSelected];\n    sorted.sort((a,b)=>{return a<b?-1:1});\n    // console.log(`sorted = ${sorted}`);\n    for(let j = 0; j < i; j = j + 1){\n      // console.log(`check ${randNum} against ${sorted[j]}`);\n      if(randNum >= sorted[j]){\n        // console.log(`${randNum} >= ${sorted[j]} so add one`);\n        randNum = randNum + 1;\n      }\n    }\n    randsSelected.push(randNum);\n    // console.log(`randsSelected = ${randsSelected}`);\n    indicesToShow.push(selectFromThese[randNum]);\n    // console.log(`indicesToShow = ${indicesToShow}`);\n  }\n\n  //console.log(`indicesToShow = ${\n  //  JSON.stringify(indicesToShow)\n  //}`);\n  //console.log(`indicesToShow = ${\n  //  JSON.stringify(indicesToShow.map((i)=>{\n  //    if(i<0){\n  //      return i;\n  //    } else {\n  //      return images[i].name;\n  //    }\n  //  })\n  //)}`);\n  let correctOne = 0;\n  while(true){\n    correctOne = Math.floor(Math.random() * numFlagsShown);\n    const entry = lastThree.find((i)=>{ \n      return i === indicesToShow[correctOne]; \n    });\n    if( entry !== undefined ){\n      continue;\n    } else {\n      break;\n    }\n  }\n  // console.log(`correctOne = ${correctOne}`);\n  const correctIdx = indicesToShow[correctOne];\n  // console.log(`correctIdx = ${correctIdx}`);\n  // console.log(`correctIdx = ${correctOne}, lastThree = ${lastThree}`);\n  lastThree.push(correctIdx);\n  lastThree.splice(0, 1);\n  //console.log(`lastThree = ${JSON.stringify(lastThree.map((i)=>{\n  //  if(i<0){\n  //    return i;\n  //  } else {\n  //    return images[i].name;\n  //  }\n  //}))}`);\n  const correctIndex = images[correctIdx].name;\n  // console.log(`correctIndex = ${correctIndex}`);\n\n  return {\n    indicesToShow: indicesToShow,\n    correctIndex: correctIndex,\n  };\n}","/Users/jeanflower/outsideICloud/git/FlagClient/src/displayData.tsx",[],"/Users/jeanflower/outsideICloud/git/FlagClient/src/IdentifyAll.tsx",[],"/Users/jeanflower/outsideICloud/git/FlagClient/src/flagImages.tsx",[],"/Users/jeanflower/outsideICloud/git/FlagClient/src/peppaPigImages.tsx",[],"/Users/jeanflower/outsideICloud/git/FlagClient/src/bSLImages.tsx",[],"/Users/jeanflower/outsideICloud/git/FlagClient/src/indianDessertImages.tsx",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":77,"column":34,"nodeType":"61","messageId":"62","endLine":79,"endColumn":6},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'correctOne'.","ArrowFunctionExpression","unsafeRefs","no-global-assign","no-unsafe-negation"]